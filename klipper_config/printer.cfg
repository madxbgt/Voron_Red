# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[include mainsail.cfg]
#[include euclid.cfg]
[include test_probe_accuracy.cfg]
#[include nozzle_scrub.cfg]
[include leds.cfg]
[exclude_object]
[include K-ShakeTune/*.cfg]

[mcu rpi]
serial: /tmp/klipper_host_mcu

[mcu can0]
canbus_uuid: 6bb2bec01209

[temperature_sensor can0]
sensor_type: temperature_mcu
sensor_mcu: can0
min_temp: 0
max_temp: 100


[adxl345]
cs_pin: can0: PB12
spi_software_sclk_pin: can0: PB10
spi_software_mosi_pin: can0: PB11
spi_software_miso_pin: can0: PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 175, 175, 20
accel_chip: adxl345


[input_shaper]
shaper_freq_x: 42.6
shaper_type_x: mzv
shaper_freq_y: 36.4
shaper_type_y: mzv

[skew_correction]


[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_39003E001551303432323631-if00
restart_method: command
##--------------------------------------------------------------------
#[temperature_sensor mcu_temp]
#sensor_type: temperature_mcu


#[temperature_sensor raspberry_pi]
#sensor_type: temperature_host


#[temperature_sensor can0]
#sensor_type: temperature_combined
#sensor_list: temperature_mcu, can0
#combination_method: mean
#maximum_deviation: 999.9

[mcu U2C]
canbus_uuid: e0fa2a9fc977

# embedded temperature sensor
[temperature_sensor U2C]
sensor_type: temperature_mcu
sensor_mcu: U2C
min_temp: 0
max_temp: 100



[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3500           #Max 4000
max_accel_to_decel: 3500
max_z_velocity: 30          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

[autotune_tmc stepper_x]
motor: ldo-42sth48-2004mah
[autotune_tmc stepper_y]
motor: ldo-42sth48-2004mah

[autotune_tmc stepper_z]
motor: ldo-42sth48-2004ac
[autotune_tmc stepper_z1]
motor: ldo-42sth48-2004ac
[autotune_tmc stepper_z2]
motor: ldo-42sth48-2004ac
[autotune_tmc stepper_z3]
motor: ldo-42sth48-2004ac

[autotune_tmc extruder]
motor: ldo-36sth20-1004ahg
##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: can0:PB5
position_min: 2
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 75   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: true
run_current: 0.75
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: true
run_current: 0.75
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 310

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: true
run_current: 1.0
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: true
run_current: 1.0
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: true
run_current: 1.0
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: true
run_current: 1.0
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: can0: PD0
dir_pin: can0: PD1
enable_pin: !can0: PD2
microsteps: 16
rotation_distance: 47.511
nozzle_diameter: 0.400
gear_ratio: 9:1
filament_diameter: 1.750
heater_pin: can0: PB13
sensor_pin: can0: PA3
#step_pin: PE2
#dir_pin: PE3
#enable_pin: !PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
#gear_ratio: 50:10               #BMG Gear Ratio
#microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
#nozzle_diameter: 0.400
#filament_diameter: 1.75
#heater_pin: PA2
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: ATC Semitec 104NT-4-R025H42G
#sensor_pin: PF4
min_temp: 10
max_temp: 290
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.05
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: can0: PA15
run_current: 0.6
#uart_pin: PE1
interpolate: true
#run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
##  Uncomment the following line if using the default SSR wiring from the docs site
#heater_pin: PA3
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
heater_pin: PA3
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.9
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

[verify_heater heater_bed]
max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 120
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

#####################################################################
#   Probe
#####################################################################

##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling
[probe]

#--------------------------------------------------------------------

## Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
pin: can0: PB6
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
#pin: PG15
## For Octopus Pro PROBE port; NPN and PNP proximity switch types can be set by jumper
#pin: ~!PC5

#--------------------------------------------------------------------

x_offset: 0
y_offset: 0
#z_offset: 0
speed: 10
samples: 3
samples_result: average
sample_retract_dist: 5.0
samples_tolerance: 0.060
samples_tolerance_retries: 3
lift_speed: 25

activate_gcode:
    {% set PROBE_TEMP = 180 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[settling_probe]
settling_sample: True
#   Globally enable the throw-away settling sample. Default is 'False'.
#   Setting this to 'True' will enable the throw-away sample for all
#   commands/operations that perform Z probing (QGL, Z tilt, Bed Mesh,
#   Screw Tilt, etc.)

#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
pin: can0: PA1
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10


##  Hotend Fan - FAN1
[heater_fan hotend_fan]
pin: can0: PA0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
fan_speed: 1.0

[temperature_fan controller_fan]
##	Controller fan - CNC_FAN2
pin: PD12
control: watermark
max_delta: 3.0
sensor_type: temperature_mcu
min_temp: 0
max_temp: 70
target_temp: 40
kick_start_time: 0.5
max_power: 0.6
shutdown_speed: 0.0


[temperature_fan pi_fan]
##  Controller fan - CNC_FAN3
pin: PD13
control: watermark
max_delta: 3.0
sensor_type: temperature_host
min_temp: 0
max_temp: 70
target_temp: 46
kick_start_time: 0.5
max_power: 0.6
shutdown_speed: 0.0


##  Exhaust fan - FAN3
[fan_generic exhaust_fan]
pin: PD14
max_power: 1
cycle_time: 0.10
kick_start_time: 0.5


#[heater_fan 4W_FAN0]
#pin: can0: PB14
#tachometer_pin: can0: PB15
#tachometer_ppr: 1



#####################################################################
#   LED Control
#####################################################################


#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position: 175.00,175.00
speed:100
z_hop:10


##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

# [board_pins]
# aliases:
#     # EXP1 header
#     EXP1_1=PE8, EXP1_2=PE7,
#     EXP1_3=PE9, EXP1_4=PE10,
#     EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
#     EXP1_7=PE14, EXP1_8=PE15,
#     EXP1_9=<GND>, EXP1_10=<5V>,

#     # EXP2 header
#     EXP2_1=PA6, EXP2_2=PA5,
#     EXP2_3=PB1, EXP2_4=PA4,
#     EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
#     EXP2_7=PC15, EXP2_8=<RST>,
#     EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------


##  RepRapDiscount 128x64 Full Graphic Smart Controller
#[display]
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------


##  mini12864 LCD Display
#[display]
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

##  To control Neopixel RGB in mini12864 display
#[neopixel btt_mini12864]
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    led_leveling
    QUAD_GANTRY_LEVEL
    G28
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32


[gcode_macro PRINT_START]

gcode:
    led_heating
    {% set BED = params.BED|int %}
    {% set EXTRUDER = params.EXTRUDER|int %}
    led_toolhead_heating
    M109 S180
    led_homing
    G28
    M190 S{ params.BED }
    G1 X175 Y175 Z20 F7500
    led_cleaning    
    #CLEAN_NOZZLE
    led_homing
    G28
    BED_MESH_CLEAR
    led_leveling
    QUAD_GANTRY_LEVEL
    led_homing
    G28
    led_meshing
    BED_MESH_CALIBRATE
    #led_cleaning
    #CLEAN_NOZZLE
    #led_calibrating_z
    #CALIBRATE_Z
    led_heating
    M190 S{BED}
    M109 S{EXTRUDER}
    G0 X340 Y340 Z20 F10000
    SKEW_PROFILE LOAD=Califlower
    PURGE_LINE
    led_printing


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-15.0 F3600                ; retract filament out of the hot zone
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    {% set z_park_abs = printer.toolhead.position.z + 25.0 %}
    {% if z_park_abs > max_z %}
        {% set z_park_abs = max_z %}
    {% endif %}

    G0 Z{z_safe} F3600                   ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000        ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                                 ; turn off fan
    G90                                  ; absolute positioning
    G0 Z{z_park_abs} F3600               ; move nozzle up away from the print
    G0 X{max_x / 2} Y{max_y - 1} F15000  ; park nozzle at rear
    Led_off
    Led_case_off
    SET_SKEW CLEAR=1
    M117 Done

[gcode_macro PURGE_LINE]
#   A purge line on the left of the bed to prime the extruder
gcode:
    G92 E0                         ; zero/reset extruder
    G1 X2.2 Y20 Z0.3 F18000        ; move to start position
    G1 E+15 F150              ;    extrude to put the pressure (-20 from purge macro)
    G92 E0

    G1 X2.2 Y200 Z0.25 F1500 E10    ; extrude the first line
    G1 Z2.0 F3000              ; move nozzle up and retract tiny bit
    G92 E0 


#####################################################################
#   Nozzle Cleaner
#####################################################################    
[gcode_macro CLEAN_NOZZLE]
variable_start_x: 240
variable_start_y: 348
variable_start_z: -1.0
variable_wipe_dist_y: -3.5
variable_wipe_qty: 5
variable_wipe_spd: 50
variable_raise_distance: 20

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   M109 S180
   G32
 {% endif %}
 QUAD_GANTRY_LEVEL
 G90                                            ; absolute positioning
 ## Move nozzle to start position
  G1 Z{raise_distance}
  G1 X{start_x} Y{start_y} F6000
  G1 Z{start_z} F1500
  
 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   #WIPE LEFT
   G1 X{start_x + 20} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 20} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 20} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 20} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 20} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   #WIPE RIGHT
   G1 X{start_x - 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   
 {% endfor %}

 ## Raise nozzle after complete
 G1 Z{raise_distance}
 G1 Y 150

[gcode_macro CLEAN_PURGE_NOZZLE]
variable_start_x: 240
variable_start_y: 346
variable_start_z: -1
variable_wipe_dist_y: -3
variable_wipe_qty: 5
variable_wipe_spd: 50
variable_raise_distance: 20
variable_purge_loc_x: 300
variable_purge_loc_y: 349

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
 G90                                            ; absolute positioning
 ## Move nozzle to start position
  G1 Z{start_z} F1500
  G1 X{start_x} Y{start_y} F6000

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   #WIPE LEFT
   G1 X{start_x + 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   #WIPE RIGHT
   G1 X{start_x - 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   
 {% endfor %}

 ## Raise nozzle after complete
 G1 Z{raise_distance}
 G1 X{purge_loc_x}
 G1 Y{purge_loc_y}
 G92 E0
 G1 E40.0 F100
 G92 E0
 G1 E-4.0 F300
 G1 Z{start_z}
 G1 Y{start_y}
 G1 X 190 F1000


[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x %}
        {% if x_min < 0 %}
            {% set x_min = 0 %}
        {% endif %}
    
        {% set y_min = printer.toolhead.axis_minimum.y %}
        {% if y_min < 0 %}
            {% set y_min = 0 %}
        {% endif %}
    
        {% set x_min = x_min + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = y_min + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED


[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
relative_reference_index: 12

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 50.579
#*# pid_ki = 1.031
#*# pid_kd = 620.223
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.206
#*# pid_ki = 2.373
#*# pid_kd = 61.726
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.002708, 0.002917, -0.015833, -0.038542, 0.010000
#*# 	-0.002083, -0.015000, -0.038125, -0.036667, 0.020000
#*# 	0.017500, 0.010417, 0.000000, -0.018333, 0.009375
#*# 	0.008750, 0.003542, -0.011667, -0.022292, 0.012500
#*# 	-0.019792, -0.023750, -0.033542, -0.061042, 0.109583
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [probe]
#*# z_offset = -0.370
#*#
#*# [skew_correction Califlower]
#*# xy_skew = 0.0006009615981489608
#*# xz_skew = 0.0
#*# yz_skew = 0.0
